#!/bin/bash
##################################################
# Name: checkupdate.yum
# Description: Script to be kept in /etc/cron.daily - When the scheduled cronjobs run each day this script will check for updates from the DISA repo.
# The script will redirect the output to specified logs. If there is an update available, SPLUNK is configured to send an alert to admins for notification and additional action: i.e. running the update. 
# This script does not make the changes, but removes the need to manually run # yum check-update each day.
# SPLUNK is specifically looking at any new files that begin with "available" in /var/log/checkupdate/ --- if a new file is written here, it will alert the email addresses specified in the SPLUNK configs.  
# Created by Kylie Subjinske 18 JAN 17
##################################################
# Set Variables
#
AVAILABLEUPDATELOG="/var/log/checkupdate/available$$"
YUMCHECKLOG="/var/log/checkupdate/log$$"
YUM="/usr/bin/yum"
$YUM check-update >& $YUMCHECKLOG
YUMSTATUS="$?"
HOSTNAME=$(/bin/hostname)
#
##################################################
# Main Script
#
echo "Checking for available updates"
BAR='###############'    # make it full, this is 15 chars
                         # but maybe you want 100 for 100%
for i in {1..100}; do
    echo -ne "\r${BAR:0:$i}" # print $i chars of $BAR from 0 position
    sleep .1
done
sleep 1
echo "\nCheck: Complete"
case $YUMSTATUS in
0)
# no updates!
exit 0 
;;
*)
DATE=$(date)
NUMBERS=$(cat $YUMCHECKLOG | egrep '(.i386|.x86_64|.noarch|.src)' | wc -l)
UPDATES=$(cat $YUMCHECKLOG | egrep '(.i386|.x86_64|.noarch|.src)')

echo "
There are $NUMBERS updates available on host $HOSTNAME at $DATE
The available updates are:
$UPDATES
" >& $AVAILABLEUPDATELOG
;;
esac
##################################################
#Cleanup
#
printf "### Deleting available update log files older than 2days.\n"
sleep 2
find /var/log/checkupdate -name '*available' -mtime +2 -print -exec rm {} \;
#
printf "### Deleting check update log files older than 2days.\n"
sleep 2
find /var/log/checkupdate -name '*log' -mtime +2 -print -exec rm {} \;
##################################################
#Final Messages
echo -e "Please see /var/log/checkupdate for relevant log files."
# EOF
